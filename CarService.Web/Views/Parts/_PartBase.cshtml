@model PartBase

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@RenderSection("Heading", false)
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @RenderSection("IdHiddenInput", false)
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @RenderSection("CatalogNumber", true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-muted h6"><em>Enter price with separator "@System.Globalization.CultureInfo.CreateSpecificCulture(Cache["currency"] as string).NumberFormat.CurrencyDecimalSeparator"</em></span><br />
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", ViewBag.Categories as IEnumerable<SelectListItem>, "-- SELECT --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label>@Html.EditorFor(m => m.IsActive)</label>
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<p>
    <a href="javascript:history.go(-1)"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>  Go Back</a>
</p>

@section Scripts {
    @Scripts.Render("~/bundles/globalize")
    @if (System.Threading.Thread.CurrentThread.CurrentCulture.Name != "bg-BG")
    {
        <script src="@String.Format("/Scripts/globalize/cultures/globalize.culture.{0}.js", System.Threading.Thread.CurrentThread.CurrentCulture.Name)"></script>
    }
    @if (Cache["currency"] != null && Cache["currency"] as string != System.Threading.Thread.CurrentThread.CurrentCulture.Name)
    {
        <script src="@String.Format("/Scripts/globalize/cultures/globalize.culture.{0}.js", Cache["currency"] as string)"></script>
    }
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(function () {
            $('#CatalogNumber').autocomplete({
                autofocus: true,
                minLength: 5,
                delay: 300,
                source: '/Ajax/FindCatalogNumber',
                select: function (event, ui) {
                    event.preventDefault();
                    $(this).val(ui.item.label);
                }
            });
        });
    </script>
}

@section styles{
    @Styles.Render("~/Content/jquery-ui-styles")
}
